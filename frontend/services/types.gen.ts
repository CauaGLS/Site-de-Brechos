// This file is auto-generated by @hey-api/openapi-ts

export type CreateExpositorSchema = {
    nome: string;
    descricao: string;
    rede_social: string;
};

export type CreatePecaSchema = {
    nome: string;
    preco: number;
    descricao: string;
};

export type ExpositorSchema = {
    created_by: UserSchema;
    id?: (number | null);
    nome: string;
    descricao?: (string | null);
    rede_social?: (string | null);
    created_at: string;
    updated_at: string;
};

export type PecaSchema = {
    created_by: UserSchema;
    id?: (number | null);
    nome: string;
    preco: (number | string);
    descricao?: (string | null);
    expositor_id: number;
    created_at: string;
    updated_at: string;
};

export type UserSchema = {
    id?: (number | null);
    password: string;
    last_login?: (string | null);
    /**
     * Designates that this user has all permissions without explicitly assigning them.
     */
    is_superuser?: boolean;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     */
    username: string;
    first_name?: (string | null);
    last_name?: (string | null);
    email?: (string | null);
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    date_joined?: string;
    /**
     * The groups this user belongs to. A user will get all permissions granted to each of their groups.
     */
    groups: Array<(number)>;
    /**
     * Specific permissions for this user.
     */
    user_permissions: Array<(number)>;
};

export type AppApiListarExpositoresResponse = (Array<ExpositorSchema>);

export type AppApiCriarExpositorData = {
    requestBody: CreateExpositorSchema;
};

export type AppApiCriarExpositorResponse = (ExpositorSchema);

export type AppApiObterExpositorData = {
    expositorId: number;
};

export type AppApiObterExpositorResponse = (ExpositorSchema);

export type AppApiAtualizarExpositorData = {
    expositorId: number;
    requestBody: ExpositorSchema;
};

export type AppApiAtualizarExpositorResponse = (ExpositorSchema);

export type AppApiDeletarExpositorData = {
    expositorId: number;
};

export type AppApiDeletarExpositorResponse = (void);

export type AppApiListarPecasResponse = (Array<PecaSchema>);

export type AppApiCriarPecaData = {
    requestBody: CreatePecaSchema;
};

export type AppApiCriarPecaResponse = (PecaSchema);

export type AppApiObterPecaData = {
    pecaId: number;
};

export type AppApiObterPecaResponse = (PecaSchema);

export type AppApiAtualizarPecaData = {
    pecaId: number;
    requestBody: PecaSchema;
};

export type AppApiAtualizarPecaResponse = (PecaSchema);

export type AppApiDeletarPecaData = {
    pecaId: number;
};

export type AppApiDeletarPecaResponse = (void);